version: "3"

env:
    ENV: '{{.ENV | default "minikube" }}'

vars:
  COMMON_NAME: wa-common
  COMMON_CHART: ./common
  DASHBOARD_NAME: wa-dashboard
  DASHBOARD_CHART: ./dashboard
  PLAYBACK_NAME: wa-playback
  PLAYBACK_CHART: ./playback
  MOCKILS_NAME: wa-mocked-ils
  MOCKILS_CHART: ./mocked-ils
  GRAPH_NAME: wa-graph
  GRAPH_CHART: ./graph
  INGEST_NAME: wa-ingest
  INGEST_CHART: ./ingest

tasks:
  default:
    desc: List the tasks
    cmds:
      - task -l


  setup:minikube:
    desc: Setup the relevant stuff for local minikube setup
    cmds:
      - task: install:mock:example-data
      - minikube addons enable ingress

  install:mock:example-data:
    desc: Copy the example data to a minikube
    cmds:
      - ssh-keygen -R $(minikube ip)
      - scp -r -i $(minikube ssh-key) examples/hostdata docker@$(minikube ip):/home/docker/


  install:
    aliases: [deploy]
    desc: Install/deploy the webarchive setup
    deps:
      - task: install:common
      - task: install:dashboard
      - task: install:graph
      - task: install:playback
      - task: install:mocked-ils
      - task: install:ingest

  upgrade:
    desc:  Upgrade the deployed webarchive setup
    deps:
      - task: upgrade:common
      - task: upgrade:dashboard
      - task: upgrade:graph
      - task: upgrade:playback
      - task: upgrade:mocked-ils
      - task: upgrade:ingest

  uninstall:
    desc:  Uninstall the deployed webarchive setup
    deps:
      - task: uninstall:common
      - task: uninstall:dashboard
      - task: uninstall:graph
      - task: uninstall:playback
      - task: uninstall:mocked-ils
      - task: uninstall:ingest

  check:
    aliases: [lint]
    desc: Verify the syntax
    cmds:
      - task: check:common
      - task: check:dashboard
      - task: check:graph
      - task: check:playback
      - task: check:mocked-ils
      - task: check:ingest


  install:common:
    - task: install:any
      vars:
        DEPLOYMENT_NAME: wa-common
        CHART: ./common

  upgrade:common:
    - task: upgrade:any
      vars:
        DEPLOYMENT_NAME: wa-common
        CHART: ./common

  check:common:
    - task: check:any
      vars:
        DEPLOYMENT_NAME: wa-common
        CHART: ./common

  uninstall:common:
    - task: uninstall:any
      vars:
        DEPLOYMENT_NAME: wa-common
        CHART: ./common


  install:dashboard:
    - task: install:any
      vars:
        DEPLOYMENT_NAME: wa-dashboard
        CHART: ./dashboard

  upgrade:dashboard:
    - task: upgrade:any
      vars:
        DEPLOYMENT_NAME: wa-dashboard
        CHART: ./dashboard

  check:dashboard:
    - task: check:any
      vars:
        DEPLOYMENT_NAME: wa-dashboard
        CHART: ./dashboard

  uninstall:dashboard:
    - task: uninstall:any
      vars:
        DEPLOYMENT_NAME: wa-dashboard
        CHART: ./dashboard


  install:playback:
    - task: install:any
      vars:
        DEPLOYMENT_NAME: wa-playback
        CHART: ./playback

  upgrade:playback:
    - task: upgrade:any
      vars:
        DEPLOYMENT_NAME: wa-playback
        CHART: ./playback

  check:playback:
    - task: check:any
      vars:
        DEPLOYMENT_NAME: wa-playback
        CHART: ./playback

  uninstall:playback:
    - task: uninstall:any
      vars:
        DEPLOYMENT_NAME: wa-playback
        CHART: ./playback


  install:mocked-ils:
    - task: install:any
      vars:
        DEPLOYMENT_NAME: wa-mocked-ils
        CHART: ./mocked-ils

  upgrade:mocked-ils:
    - task: upgrade:any
      vars:
        DEPLOYMENT_NAME: wa-mocked-ils
        CHART: ./mocked-ils

  check:mocked-ils:
    - task: check:any
      vars:
        DEPLOYMENT_NAME: wa-mocked-ils
        CHART: ./mocked-ils

  uninstall:mocked-ils:
    - task: uninstall:any
      vars:
        DEPLOYMENT_NAME: wa-mocked-ils
        CHART: ./mocked-ils



  install:graph:
    - task: install:any
      vars:
        DEPLOYMENT_NAME: wa-graph
        CHART: ./graph

  upgrade:graph:
    - task: upgrade:any
      vars:
        DEPLOYMENT_NAME: wa-graph
        CHART: ./graph

  check:graph:
    - task: check:any
      vars:
        DEPLOYMENT_NAME: wa-graph
        CHART: ./graph

  uninstall:graph:
    - task: uninstall:any
      vars:
        DEPLOYMENT_NAME: wa-graph
        CHART: ./graph


  install:ingest:
    - task: install:any
      vars:
        DEPLOYMENT_NAME: wa-ingest
        CHART: ./ingest

  upgrade:ingest:
    - task: upgrade:any
      vars:
        DEPLOYMENT_NAME: wa-ingest
        CHART: ./ingest

  check:ingest:
    - task: check:any
      vars:
        DEPLOYMENT_NAME: wa-ingest
        CHART: ./ingest

  uninstall:ingest:
    - task: uninstall:any
      vars:
        DEPLOYMENT_NAME: wa-ingest
        CHART: ./ingest


  debug:
    desc: Collect some information helpful for debugging
    summary: |
      Also check out https://helm.sh/docs/chart_template_guide/debugging/
    cmds:
      - helm get manifest {{.PLAYBACK_NAME}}

  install:any:
    desc: Install command
    internal: true
    cmds:
      - helm install -f {{.COMMON_CHART}}/values.yaml -f {{.COMMON_CHART}}/values-{{.ENV}}.yaml {{.DEPLOYMENT_NAME}} {{.CHART}}

  upgrade:any:
    desc: Upgrade command
    internal: true
    cmds:
      - helm upgrade -f {{.COMMON_CHART}}/values.yaml -f {{.COMMON_CHART}}/values-{{.ENV}}.yaml {{.DEPLOYMENT_NAME}} {{.CHART}}

  check:any:
    desc: Check command
    internal: true
    cmds:
      - helm lint {{.CHART}}
      - helm install --debug --dry-run -f {{.COMMON_CHART}}/values.yaml -f {{.COMMON_CHART}}/values-{{.ENV}}.yaml {{.DEPLOYMENT_NAME}} {{.CHART}}

  uninstall:any:
    desc: Uninstall command
    internal: true
    cmds:
      - helm uninstall {{.DEPLOYMENT_NAME}}