kind: Deployment
apiVersion: apps/v1
metadata:
  name: graph-app
  labels:
    app: graph
spec:
  selector:
    matchLabels:
      app: graph
  template:
    metadata:
      labels:
        app: graph
    spec:
      initContainers:
        - name: wacli-load-graph
          image: 'ghcr.io/deutsche-nationalbibliothek/wacli:main'
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          # command: ["python", "-m", "wacli.run"]
          args: ["load-graph"]
          envFrom:
            - configMapRef:
                name: wacli-configmap
          volumeMounts:
            - mountPath: {{ .Values.websiteGraphDir | quote }}
              name: website-graph-dir
              readOnly: false
            - mountPath: {{ .Values.queryDirectory | quote }}
              name: wacli-query-collection
        - name: wacli-list
          image: 'ghcr.io/deutsche-nationalbibliothek/wacli:main'
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          args: ["list"]
          envFrom:
            - configMapRef:
                name: wacli-configmap
          volumeMounts:
            - mountPath: {{ .Values.websiteGraphDir | quote }}
              name: website-graph-dir
              readOnly: true
            - mountPath: {{ .Values.queryDirectory | quote }}
              name: wacli-query-collection
      containers:
        - name: sparql-app
          image: 'ghcr.io/aksw/sparql-file:main'
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          envFrom:
            - configMapRef:
                name: sparql-configmap
          volumeMounts:
            - mountPath: {{ .Values.websiteGraphDir | quote }}
              name: website-graph-dir
              readOnly: true
      volumes:
        - name: website-graph-dir
          persistentVolumeClaim:
            claimName: website-graph-dir-pvc
        - name: wacli-query-collection
          configMap:
            name: wacli-query-collection-configmap
            items:
              - key: "remote_query.rq"
                path: "remote_query.rq"
              - key: "local_query.rq"
                path: "local_query.rq"
              - key: "list_query.rq"
                path: "list_query.rq"
---
kind: Service
apiVersion: v1
metadata:
  name: graph-service
spec:
  selector:
    app: graph
  ports:
    - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: graph-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /sparql(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: graph-service
                port:
                  number: 8080
